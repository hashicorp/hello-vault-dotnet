version: "3.9"
services:

  app:
    build: WebService/
    environment:
      VAULT_ADDRESS:                http://vault-server:8200
      VAULT_APPROLE_ROLE_ID:        demo-web-app
      VAULT_APPROLE_SECRET_ID_FILE: /tmp/secret
      VAULT_DATABASE_CREDS_PATH:    database/creds/dev-readonly
      VAULT_API_KEY_PATH:           api-key
      VAULT_API_KEY_FIELD:          api-key-descriptor
      DATABASE_HOSTNAME:            database
      DATABASE_PORT:                1433
      SECURE_SERVICE_ADDRESS:       http://secure-service/api
    volumes:
      - type:   volume
        source: trusted-orchestrator-volume
        target: /tmp
    ports:
      - 80:80
    depends_on:
      vault-server:
        condition: service_healthy
      trusted-orchestrator:
        condition: service_healthy
      database-data:
        condition: service_completed_successfully
      secure-service:
        condition: service_healthy

  vault-server:
    build: ./setup/vault-server/
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      APPROLE_ROLE_ID:         demo-web-app
      ORCHESTRATOR_TOKEN:      insecure_token
      DATABASE_HOSTNAME:       database
      DATABASE_PORT:           1433
    ports:
      - 8200:8200
    depends_on:
      database-data:
        condition: service_completed_successfully

  trusted-orchestrator:
    build: ./setup/trusted-orchestrator
    environment:
      VAULT_ADDRESS:      http://vault-server:8200
      ORCHESTRATOR_TOKEN: insecure_token
    volumes:
      - type:   volume
        source: trusted-orchestrator-volume
        target: /tmp
    depends_on:
      vault-server:
        condition: service_healthy

  # docker-compose.arm64.yaml uses mcr.microsoft.com/azure-sql-edge and
  # mcr.microsoft.com/mssql-tools images in place of the default
  # mcr.microsoft.com/mssql/server image. This is to work around mssql/server's
  # incompatibility with arm64 architecture
  database:
    image: mcr.microsoft.com/azure-sql-edge:latest
    init: true
    environment:
      ACCEPT_EULA:        y
      MSSQL_SA_PASSWORD:  DatabaseAdminPassword1
      MSSQL_PID:          Developer
    cap_add:
      - SYS_PTRACE
    ports:
      - 1433:1433

  database-data:
    image: mcr.microsoft.com/mssql-tools
    init: true
    environment:
      DATABASE_HOSTNAME:  database
      DATABASE_PORT:      1433
      SA_PASSWORD:        DatabaseAdminPassword1
    volumes:
      - type:    bind
        source:  setup/database
        target:  /home/database/.
    command: [  "/home/database/populate.sh" ]
    depends_on:
      database:
        condition: service_started

  # secure-service is a simulated 3rd party service that requires a specific header to get a 200 response
  secure-service:
    image: nginx:latest
    environment:
      EXPECTED_API_KEY: my-secret-key # sets the expected value for incoming requests' header X-API-KEY
    volumes:
      - type:   bind
        source: ./setup/secure-service/default.conf.template
        target: /etc/nginx/templates/default.conf.template
    ports:
      - 8080:80
    healthcheck:
      test:         curl --fail -s http://localhost/healthcheck || exit 1
      start_period: 1s
      interval:     1s
      timeout:      1s
      retries:      30

volumes:
  trusted-orchestrator-volume:
